// Copyright 2013 Lauren Sperber
// https://github.com/lauren/specify-me/blob/master/LICENSE
//
// A more efficient way to calculate selector specificity. If you want to preserve the
// hierarchy of the inputted selectors, try the version called
// specificity-calculator-with-hierarchy.js
(function(e){function l(e){return e.reduce(function(e,t){return e.add(c(t),t),e},new f)}var t=[":link",":visited",":hover",":active",":target",":lang",":focus",":enabled",":disabled",":checked",":indeterminate",":root",":nth-child",":nth-last-child",":nth-of-type",":nth-last-of-type",":first-child",":last-child",":first-of-type",":last-of-type",":only-child",":only-of-type",":empty"],n=["::first-line","::first-letter","::before","::after"],r=/(\.|#|:|\[|\*|\+|\<|\>|\~|\s)/,i=/^(\*|\+|\<|\>|\~|\s)+/,s=function(e){return typeof e=="string"?o(e):e.map(o)},o=function(e){var t=l(a(e)),n=[["ids"],["classes","pseudoClasses","attributes"],["nodes","pseudoElements"]];return t.score=n.map(function(e){return t.getCategories(e).length}),t},u=function(e){return e.replace(i,"")},a=function(e){e=u(e);if(e.length===0)return[];var t=e.slice(1).search(r),t=t>=0?t+1:e.length,n=e.slice(0,t).replace(/\(|\)/,""),i=e.slice(t);return[n].concat(a(i))},f=function(){this.categories={}};f.prototype={add:function(e,t){return this.categories[e]===undefined&&(this.categories[e]=[]),this.categories[e].push(t),this},getCategories:function(e){if(e.length===0)return[];var t=this.categories[e[0]];return(t===undefined?[]:t).concat(this.getCategories(e.slice(1)))}};var c=function(e){switch(e.charAt(0)){case"*":case"+":case"~":case"<":case">":return"wildcardAndCombinators";case"#":return"ids";case".":return"classes";case"[":return"attributes";case":":return e.slice(1,2)===":"?"pseudoElements":"pseudoClasses";default:return"nodes"}},h=function(e,t){for(var n=0;n<e.length;n++)if(e[n]===t)return!0;return!1};Array.prototype.map===undefined&&(Array.prototype.map=function(e){var t=[];for(var n=0,r=this.length;n<r;n++)t.push(e(this[n]));return t}),Array.prototype.reduce===undefined&&(Array.prototype.reduce=function(e,t){if(this.length===0&&t===undefined)throw new TypeError("Reduce of empty array with no initial value");var n=0;t===undefined&&(t=this[0],n=1);for(var r=this.length;n<r;n++)t=e(t,this[n]);return t}),e.specifyMe=s})(this);